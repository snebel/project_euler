# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
# Triangle    Tn=n(n+1)/2   1, 3, 6, 10, 15, ...
# Pentagonal    Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
# Hexagonal   Hn=n(2n−1)    1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.
#
# Find the next triangle number that is also pentagonal and hexagonal.
#
# My Notes:
# - For each sequence, we can come up with a formula, e.g. Math.sqrt(2*p + 0.25) + 0.5,
#   by completing the square to determine if a number p is a member of that sequence
#   when the formula is an integer.
# - Hexagonals grow the fastest, so lets begin with the 144th hexagonal and check if
#   each subsequent one is also a pentagonal and triangular number.

def tri?(p)
  ans = Math.sqrt(2*p + 0.25) + 0.5
  ans == ans.to_i
end

def pent?(p)
  ans = Math.sqrt(2*p/3.0 + 1/36.0) + 1/6.0
  ans == ans.to_i 
end

def hex?(p)
  ans = (Math.sqrt(8*p + 1) + 1) / 4.0
  ans == ans.to_i
end

def check_hexes(start = 144)
  start.upto(Float::INFINITY) do |n|
    hex = n*(2*n - 1)
    return hex if tri?(hex) && pent?(hex)
  end
end

puts check_hexes
